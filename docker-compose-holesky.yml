# Docker Compose para Testnet Holesky - Rocket Pool Node (Modo Docker Correto)
# Configuração basead      - execution-endpoint=http://geth:8551 na arquitetura oficial do Rocket Pool
# Utiliza containers separados para cada componente

services:
  # Rocket Pool Node (daemon principal)
  rocketpool-node:
    image: rocketpool/smartnode:latest
    container_name: rocketpool-node-holesky
    restart: unless-stopped
    command: ["node"]
    ports:
      - "8000:8000"        # API Rocket Pool
    volumes:
      - ${ROCKETPOOL_DATA_PATH:-./rocketpool-holesky}:/.rocketpool
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - ROCKET_POOL_NETWORK=holesky
    networks:
      - holesky-network
    depends_on:
      - geth
      - lighthouse
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Geth (Execution Client)
  geth:
    image: ethereum/client-go:latest
    container_name: geth
    restart: unless-stopped
    ports:
      - "30303:30303/tcp"  # P2P
      - "30303:30303/udp"  # P2P
      - "8545:8545"        # HTTP RPC
      - "8546:8546"        # WebSocket RPC
      - "8551:8551"        # Auth RPC
      - "6060:6060"        # Metrics
    volumes:
      - ${EXECUTION_DATA_PATH:-./execution-data-holesky}:/root/.ethereum
      - ${ROCKETPOOL_DATA_PATH:-./rocketpool-holesky}/secrets:/secrets:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command: >
      --holesky
      --datadir=/root/.ethereum/geth
      --http
      --http.addr=0.0.0.0
      --http.port=8545
      --http.api=eth,net,web3
      --http.vhosts=*
      --ws
      --ws.addr=0.0.0.0
      --ws.port=8546
      --ws.api=eth,net,web3
      --authrpc.addr=0.0.0.0
      --authrpc.port=8551
      --authrpc.jwtsecret=/secrets/jwtsecret
      --authrpc.vhosts=*
      --metrics
      --metrics.addr=0.0.0.0
      --metrics.port=6060
      --syncmode=snap
      --maxpeers=50
      --ipcdisable
    networks:
      - holesky-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Lighthouse (Consensus Client)
  lighthouse:
    image: sigp/lighthouse:latest
    container_name: lighthouse
    restart: unless-stopped
    ports:
      - "9000:9000/tcp"    # P2P
      - "9000:9000/udp"    # P2P
      - "5052:5052"        # HTTP API
      - "5054:5054"        # Metrics
    volumes:
      - ${CONSENSUS_DATA_PATH:-./consensus-data-holesky}:/root/.lighthouse
      - ${ROCKETPOOL_DATA_PATH:-./rocketpool-holesky}/secrets:/secrets:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command: >
      lighthouse bn
      --purge-db
      --network=holesky
      --datadir=/root/.lighthouse
      --http
      --http-address=0.0.0.0
      --http-port=5052
      --execution-endpoint=http://geth:8551
      --execution-jwt=/secrets/jwtsecret
      --metrics
      --metrics-address=0.0.0.0
      --metrics-port=5054
      --port=9000
      --discovery-port=9000
      --block-cache-size=10
      --historic-state-cache-size=4
      --auto-compact-db=true
      --checkpoint-sync-url=https://checkpoint-sync.holesky.ethpandaops.io
      --checkpoint-sync-url-timeout=600
      --target-peers=25
      --enr-tcp-port=9000
      --enr-udp-port=9000
      --subscribe-all-subnets
    networks:
      - holesky-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviços de monitoramento
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-holesky
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ${PROMETHEUS_DATA_PATH:-./prometheus-data-holesky}:/prometheus
      - ./prometheus-holesky.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts/node-alerts.yml:/etc/prometheus/alerts.yml:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=5GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://localhost:9090'
    networks:
      - holesky-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-holesky
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ${GRAFANA_DATA_PATH:-./grafana-data-holesky}:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - holesky-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter-holesky
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - holesky-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  holesky-network:
    driver: bridge
    name: holesky-network

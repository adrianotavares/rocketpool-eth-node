#!/bin/bash
# Script para limpar completamente os dados da testnet Hoodi
# Clean script for Hoodi testnet - USE WITH CAUTION!

set -e

echo "üóëÔ∏è  Script de Limpeza - Testnet Hoodi"
echo "===================================="
echo ""
echo "‚ö†Ô∏è  ATEN√á√ÉO: Este script ir√° remover TODOS os dados da Hoodi!"
echo "   - Dados do blockchain (execution e consensus)"
echo "   - Configura√ß√µes do Rocket Pool"
echo "   - Dados de monitoramento (Prometheus, Grafana)"
echo "   - Containers Docker"
echo ""

# Confirmar a√ß√£o
read -p "Tem certeza que deseja continuar? Digite 'sim' para confirmar: " confirm

if [ "$confirm" != "sim" ]; then
    echo "‚ùå Opera√ß√£o cancelada."
    exit 0
fi

# Configurar diret√≥rio
cd "$(dirname "$0")/.."

# Parar containers primeiro
echo "üõë Parando containers..."
if [ -f "docker-compose-hoodi.yml" ]; then
    docker compose -f docker-compose-hoodi.yml down -v --remove-orphans
else
    echo "   docker-compose-hoodi.yml n√£o encontrado, continuando..."
fi

# Remover containers √≥rf√£os especificamente da Hoodi
echo "üßπ Removendo containers √≥rf√£os da Hoodi..."
docker ps -a --filter name=hoodi --format "{{.ID}}" | xargs -r docker rm -f || true

# Carregar vari√°veis de ambiente para encontrar os diret√≥rios
if [ -f ".env.hoodi" ]; then
    echo "üìã Carregando configura√ß√µes..."
    set -a
    source .env.hoodi
    set +a
    
    # Remover dados do SSD
    if [ -d "$SSD_MOUNT_PATH/ethereum-data-hoodi" ]; then
        echo "üíæ Removendo dados do SSD: $SSD_MOUNT_PATH/ethereum-data-hoodi/"
        echo "   Isso inclui:"
        echo "   - Blockchain data (execution e consensus)"
        echo "   - Configura√ß√µes do Rocket Pool (user-settings.yml)"
        echo "   - JWT secrets"
        echo "   - Dados de monitoramento"
        echo ""
        read -p "Confirma a remo√ß√£o de TODOS os dados? Digite 'confirmo': " final_confirm
        
        if [ "$final_confirm" = "confirmo" ]; then
            rm -rf "$SSD_MOUNT_PATH/ethereum-data-hoodi"
            echo "   ‚úÖ Dados do SSD removidos"
        else
            echo "   ‚ùå Remo√ß√£o cancelada"
            exit 0
        fi
    else
        echo "   üìÅ Diret√≥rio do SSD n√£o encontrado: $SSD_MOUNT_PATH/ethereum-data-hoodi"
    fi
else
    echo "‚ö†Ô∏è  Arquivo .env.hoodi n√£o encontrado, removendo diret√≥rios locais..."
fi

# Remover diret√≥rios locais (caso existam)
echo "üìÅ Removendo diret√≥rios locais..."
for dir in rocketpool-hoodi execution-data-hoodi consensus-data-hoodi prometheus-data-hoodi grafana-data-hoodi alertmanager-data-hoodi; do
    if [ -d "$dir" ]; then
        rm -rf "$dir"
        echo "   ‚úÖ Removido: $dir"
    fi
done

# Remover volumes Docker √≥rf√£os
echo "üê≥ Removendo volumes Docker √≥rf√£os..."
docker volume ls --filter name=hoodi --format "{{.Name}}" | xargs -r docker volume rm || true

# Remover redes Docker √≥rf√£s
echo "üåê Removendo redes Docker √≥rf√£s..."
docker network ls --filter name=hoodi --format "{{.Name}}" | xargs -r docker network rm || true

# Limpeza final do Docker
echo "üßΩ Limpeza final do Docker..."
docker system prune -f

echo ""
echo "‚úÖ Limpeza da Testnet Hoodi conclu√≠da!"
echo ""
echo "üìä Resumo do que foi removido:"
echo "   - Containers Docker da Hoodi"
echo "   - Volumes e redes Docker"
echo "   - Dados do blockchain no SSD"
echo "   - Dados de monitoramento"
echo "   - Configura√ß√µes do Rocket Pool"
echo ""
echo "üí° Para reinstalar a Hoodi:"
echo "   ./scripts/start-hoodi.sh"
echo ""
echo "‚è±Ô∏è  Tempo de ressincroniza√ß√£o estimado: 1-2 horas"
echo ""

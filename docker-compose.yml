services:
  execution:
    image: ethereum/client-go:stable
    container_name: execution-client
    restart: always
    volumes:
      - ./execution-data:/root/.ethereum
    ports:
      - "30303:30303"
      - "8545:8545"
      - "8551:8551"
      - "6060:6060"  # Metrics port
    command: [
      "--http", "--http.addr", "0.0.0.0", "--http.api", "eth,net,web3",
      "--syncmode", "snap", "--http.corsdomain", "*", "--http.vhosts", "*",
      "--authrpc.addr", "0.0.0.0", "--authrpc.port", "8551", 
      "--authrpc.vhosts", "*", "--authrpc.jwtsecret", "/root/.ethereum/jwtsecret",
      "--metrics", "--metrics.addr", "0.0.0.0", "--metrics.port", "6060"
    ]

  consensus:
    image: sigp/lighthouse:latest
    container_name: consensus-client
    restart: always
    depends_on:
      - execution
    volumes:
      - ./consensus-data:/root/.lighthouse
      - ./execution-data/geth/jwtsecret:/root/jwtsecret:ro
    command: [
      "lighthouse", "bn", "--network", "mainnet", "--execution-endpoint", "http://execution:8551",
      "--execution-jwt", "/root/jwtsecret",
      "--checkpoint-sync-url", "https://mainnet.checkpoint.sigp.io",
      "--metrics", "--metrics-address", "0.0.0.0", "--metrics-port", "5054"
    ]
    ports:
      - "9000:9000"
      - "5054:5054"  # Metrics port

  rocketpool:
    image: rocketpool/smartnode:latest
    container_name: rocketpool-node
    restart: always
    depends_on:
      - execution
      - consensus
    volumes:
      - ./rocketpool-data:/.rocketpool
    ports:
      - "8000:8000"
    command: ["node"]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
